/******************************************************************************
 * Copyright (c) 2014, AllSeen Alliance. All rights reserved.
 *
 *    Contributed by Qualcomm Connected Experiences, Inc.,
 *    with authorization from the AllSeen Alliance, Inc.
 *    
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *    
 *        http://www.apache.org/licenses/LICENSE-2.0
 *    
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 *    
 *    Pursuant to Section 1 of the License, the work of authorship constituting
 *    a Work and any Contribution incorporated in the Work shall mean only that
 *    Contributor's code submissions authored by that Contributor.  Any rights
 *    granted under the License are conditioned upon acceptance of these
 *    clarifications.
 *
 ******************************************************************************/
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_allseen_lsf_MasterSceneManager */

#ifndef _Included_org_allseen_lsf_MasterSceneManager
#define _Included_org_allseen_lsf_MasterSceneManager
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    getAllMasterSceneIDs
 * Signature: ()Lorg/allseen/lsf/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_MasterSceneManager_getAllMasterSceneIDs
  (JNIEnv *, jobject);

/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    getMasterSceneName
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Lorg/allseen/lsf/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_MasterSceneManager_getMasterSceneName
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    setMasterSceneName
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/allseen/lsf/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_MasterSceneManager_setMasterSceneName
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    createMasterScene
 * Signature: (Lorg/allseen/lsf/MasterScene;Ljava/lang/String;Ljava/lang/String;)Lorg/allseen/lsf/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_MasterSceneManager_createMasterScene
  (JNIEnv *, jobject, jobject, jstring, jstring);

/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    updateMasterScene
 * Signature: (Ljava/lang/String;Lorg/allseen/lsf/MasterScene;)Lorg/allseen/lsf/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_MasterSceneManager_updateMasterScene
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    getMasterScene
 * Signature: (Ljava/lang/String;)Lorg/allseen/lsf/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_MasterSceneManager_getMasterScene
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    deleteMasterScene
 * Signature: (Ljava/lang/String;)Lorg/allseen/lsf/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_MasterSceneManager_deleteMasterScene
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    applyMasterScene
 * Signature: (Ljava/lang/String;)Lorg/allseen/lsf/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_MasterSceneManager_applyMasterScene
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    createNativeObject
 * Signature: (Lorg/allseen/lsf/ControllerClient;Lorg/allseen/lsf/MasterSceneManagerCallback;)V
 */
JNIEXPORT void JNICALL Java_org_allseen_lsf_MasterSceneManager_createNativeObject
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     org_allseen_lsf_MasterSceneManager
 * Method:    destroyNativeObject
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_allseen_lsf_MasterSceneManager_destroyNativeObject
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
