# Copyright AllSeen Alliance. All rights reserved.
#
#    Contributed by Qualcomm Connected Experiences, Inc.,
#    with authorization from the AllSeen Alliance, Inc.
#    
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#    
#        http://www.apache.org/licenses/LICENSE-2.0
#    
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#    
#    Pursuant to Section 1 of the License, the work of authorship constituting
#    a Work and any Contribution incorporated in the Work shall mean only that
#    Contributor's code submissions authored by that Contributor.  Any rights
#    granted under the License are conditioned upon acceptance of these
#    clarifications.
# 

Import('env')

samples_env = env.Clone()

if samples_env['BR'] == 'on':
    # Build apps with bundled daemon support
    samples_env.Prepend(LIBS = [samples_env['ajrlib']])

# Basic Sample programs
samples_env.SConscript('basic/SConscript', exports = {'env': samples_env})

# MQTT Sample programs
samples_env.SConscript('mqtt/SConscript', exports = {'env': samples_env})

# Simple Sample programs
samples_env.SConscript('simple/SConscript', exports = {'env': samples_env})

# Security Sample programs
samples_env.SConscript('secure/SConscript', exports = {'env': samples_env})

# Chat Sample program
samples_env.SConscript('chat/SConscript', exports = {'env': samples_env})

# Trusted Thin Library Sample Routing Node program
samples_env.SConscript('TrustedTLSampleRN/SConscript', exports = {'env': samples_env})

# Event and Action Sample program
samples_env.SConscript('eventaction/SConscript', exports = {'env': samples_env})

# Install readme
if env['OS_CONF'] == 'windows':
    env.InstallAs('$CPP_DISTDIR/samples/README.txt', 'README.windows.txt')
elif env['OS_CONF'] == 'android':
    env.InstallAs('$CPP_DISTDIR/samples/README.txt', 'README.android.txt')
elif env['OS_CONF'] == 'linux':
    env.InstallAs('$CPP_DISTDIR/samples/README.txt', 'README.linux.txt')
