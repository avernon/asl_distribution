# Copyright AllSeen Alliance. All rights reserved.
#
#    Contributed by Qualcomm Connected Experiences, Inc.,
#    with authorization from the AllSeen Alliance, Inc.
#    
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#    
#        http://www.apache.org/licenses/LICENSE-2.0
#    
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#    
#    Pursuant to Section 1 of the License, the work of authorship constituting
#    a Work and any Contribution incorporated in the Work shall mean only that
#    Contributor's code submissions authored by that Contributor.  Any rights
#    granted under the License are conditioned upon acceptance of these
#    clarifications.
# 

Import('env')

test_env = env.Clone()
test_env.Append(CPPPATH = test_env.Dir('..').srcnode())

if test_env['BR'] == 'on':
    # Build apps with bundled daemon support
    test_env.Prepend(LIBS = [test_env['ajrlib']])

# Test Programs installed in the sdk bin directory
progs = [
    test_env.Program('ajxmlcop',      ['ajxmlcop.cc']),
    test_env.Program('bastress2',     ['bastress2.cc']),
    test_env.Program('bbclient',      ['bbclient.cc']),
    test_env.Program('bbjoin',        ['bbjoin.cc']),
    test_env.Program('bbservice',     ['bbservice.cc']),
    test_env.Program('bbsig',         ['bbsig.cc']),
    test_env.Program('bbsigtest',     ['bbsigtest.cc']),
    test_env.Program('eventsactionservice', ['eventsactionservice.cc']),
    test_env.Program('init',          ['init.cc']),
    test_env.Program('rawclient',     ['rawclient.cc']),
    test_env.Program('rawservice',    ['rawservice.cc']),
    test_env.Program('sessions',      ['sessions.cc'])
    ]

if test_env['OS'] == 'linux':
   progs.extend(test_env.Program('observer-multipeer',     ['observer-multipeer.cc']))

if test_env['OS'] in ['linux', 'android']:
    progs.extend(test_env.Program('mc-rcv',     ['mc-rcv.cc']))
    progs.extend(test_env.Program('mc-snd',     ['mc-snd.cc']))

if test_env['OS'] in ['win7', 'win10']:
    progs.extend(test_env.Program('litegen',     ['litegen.cc']))
    progs.extend(test_env.Program('mouseclient', ['mouseclient.cc']))

# Test Programs installed in the test bin directory
progs_test = [
    test_env.Program('aclient',       ['aclient.cc']),
    test_env.Program('aes_ccm',       ['aes_ccm.cc']),
    test_env.Program('aservice',      ['aservice.cc']),
    test_env.Program('bastress',      ['bastress.cc']),
    test_env.Program('bbjitter',      ['bbjitter.cc']),
    test_env.Program('bignum',        ['bignum.cc']),
    test_env.Program('marshal',       ['marshal.cc']),
    test_env.Program('names',         ['names.cc']),
    test_env.Program('propstresstest',['propstresstest.cc']),
    test_env.Program('proptester',    ['proptester.cc']),
    test_env.Program('remarshal',     ['remarshal.cc']),
    test_env.Program('socktest',      ['socktest.cc']),
    test_env.Program('srp',           ['srp.cc']),
    test_env.Program('unpack',        ['unpack.cc'])
    ]

Return('progs', 'progs_test')
