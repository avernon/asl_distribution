# Copyright AllSeen Alliance. All rights reserved.
#
#    Contributed by Qualcomm Connected Experiences, Inc.,
#    with authorization from the AllSeen Alliance, Inc.
#    
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#    
#        http://www.apache.org/licenses/LICENSE-2.0
#    
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#    
#    Pursuant to Section 1 of the License, the work of authorship constituting
#    a Work and any Contribution incorporated in the Work shall mean only that
#    Contributor's code submissions authored by that Contributor.  Any rights
#    granted under the License are conditioned upon acceptance of these
#    clarifications.
# 

Import('router_env', 'router_objs', 'srobj')

# Build the resources for the dll
rsc = router_env.RES('DaemonResources.rc')

daemon_static_lib = [];
daemon_shared_lib = [];

# Build the Windows daemon.
router_libs = router_env.SharedLibrary('daemonlib', ['daemon-service.cc', 'daemon-main.cc'] + srobj + router_objs + rsc)

# the variable router_libs contains the file nodes for the  static library and the 
# shared library however it may contain more files such as .pdb files on windows.  
# Search through the list and assign the static library to daemon_static_lib  and 
# the shared library to daemon_shared_lib variable.
for x in router_libs: 
    if router_env['LIBSUFFIX'] in str(x):
        daemon_static_lib = x;
    if router_env['SHLIBSUFFIX'] in str(x):
        daemon_shared_lib = x;

router_env.Install('$CPP_DISTDIR/lib', daemon_static_lib) #put the *.lib file in the lib folder
env2 = router_env.Clone();
env2.Append(LIBS = ['daemonlib'])
daemon = []

progs = [daemon, daemon_shared_lib] # daemonlibs.dll will be returned
Return('progs')
