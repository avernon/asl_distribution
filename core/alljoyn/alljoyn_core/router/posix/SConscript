# Copyright AllSeen Alliance. All rights reserved.
#
#    Contributed by Qualcomm Connected Experiences, Inc.,
#    with authorization from the AllSeen Alliance, Inc.
#    
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#    
#        http://www.apache.org/licenses/LICENSE-2.0
#    
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#    
#    Pursuant to Section 1 of the License, the work of authorship constituting
#    a Work and any Contribution incorporated in the Work shall mean only that
#    Contributor's code submissions authored by that Contributor.  Any rights
#    granted under the License are conditioned upon acceptance of these
#    clarifications.
# 

Import('router_env', 'router_objs', 'srobj')

# Build the posix daemon and service launcher helper.
if router_env['OS'] != 'darwin':
    daemon_env = router_env.Clone()
    if daemon_env['OS'] != 'android':
        daemon_env.Append(LIBS = 'cap')
    daemon = daemon_env.Program('alljoyn-daemon', ['daemon-main.cc'] + srobj + router_objs)
else:
    daemon = []
	
#
# On Android, build a static library that can be linked into a JNI dynamic 
# library to implement the daemon as a Service
#
if router_env['OS'] == 'android':
   libenv = router_env.Clone(CCFLAGS = '-DROUTER_LIB')
   libenv.Object(target = 'alljoyn-daemon', source = 'daemon-main.cc')
   libdaemon = libenv.StaticLibrary(['alljoyn-daemon'] + srobj + router_objs)
   dlibs = libenv.Install('$CPP_DISTDIR/lib', libdaemon)

progs = daemon
Return('progs')
