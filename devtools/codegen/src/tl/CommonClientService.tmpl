###############################################################################
## Copyright (c) 2013, 2014 AllSeen Alliance. All rights reserved.
##
## Contributed by Qualcomm Connected Experiences, Inc.,
## with authorization from the AllSeen Alliance, Inc.
## 
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
## 
##     http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## 
## Pursuant to Section 1 of the License, the work of authorship constituting
## a Work and any Contribution incorporated in the Work shall mean only that
## Contributor's code submissions authored by that Contributor.  Any rights
## granted under the License are conditioned upon acceptance of these
## clarifications.
###############################################################################
#import GenTL
/* Source: "$command_line.xml_input_file" */

\#include <ajtcl/alljoyn.h>

/*********
 * This string is defined on the command line to the code generator. But the buffer
 * must be large enough to hold the full service name because AJ_StartClientByName()
 * uses this for output.
 *********/
char g_ServiceName[AJ_MAX_SERVICE_NAME_SIZE] = "$command_line.well_known_name";

## Create all of the interface description tables.
#for $key in $sorted($service.interfaces)
    #set $i = $service.interfaces[$key]
    #set $code_name = $GenTL.get_interface_coded_name($i)
const char* g_${code_name}[] = {
    #if $i.is_secure
    "$$i.interface_full_name",
    #else
    "$i.interface_full_name",
    #end if
    #for $m in $i.methods
        #set $args = ""
        #for $a in $m.args
            #if $a.direction == "in"
                #set $direction = "<"
            #else
                #assert $a.direction == "out"
                #set $direction = ">"
            #end if
            #set $args = $args + " " + $a.name+$direction+$a.arg_type
        #end for
    "?$m.name$args",
    #end for
    #for $s in $i.signals
        #set $args = ""
        #for $a in $s.args
            #assert $a.direction == "out"
            #set $direction = ">"
            #set $args = $args + " " + $a.name+$direction+$a.arg_type
        #end for
    "!$s.name$args",
    #end for
    #for $p in $i.properties
        #if $p.access == "read"
            #set $direction = ">"
        #elif $p.access == "write"
            #set $direction = "<"
        #else
            #assert $p.access == "readwrite"
            #set $direction = "="
        #end if
    "@$p.name$direction${p.args[0].arg_type}",
    #end for
    NULL
};
#end for

/* These tables are the set of interfaces that comprise each object (node). */
#set $objects = $service.get_objects()
#for $o in $objects
    #set $interface_names = $GenTL.get_all_interface_coded_names($o)
    #if len($interface_names) > 0
const AJ_InterfaceDescription $GenTL.get_interface_set_name($o)[] = {
        #set $interface_names = $GenTL.get_all_interface_coded_names($o)
        #for $n in $interface_names
    $n,
        #end for
    NULL
};
    #end if
#end for

/* These tables are the set of objects (nodes). */
const AJ_Object g_ObjectTable[] = {
#set $objects = $service.get_objects()
#for $o in $objects
    #if len($o.interfaces) > 0
    { "$o.get_full_name", $GenTL.get_interface_set_name($o) },
    #end if
#end for
    { NULL, NULL }
};
