###############################################################################
## Copyright (c) 2013 AllSeen Alliance. All rights reserved.
##
## Contributed by Qualcomm Connected Experiences, Inc.,
## with authorization from the AllSeen Alliance, Inc.
## 
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
## 
##     http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## 
## Pursuant to Section 1 of the License, the work of authorship constituting
## a Work and any Contribution incorporated in the Work shall mean only that
## Contributor's code submissions authored by that Contributor.  Any rights
## granted under the License are conditioned upon acceptance of these
## clarifications.
###############################################################################
# Source: "$command_line.xml_input_file"

#raw
import platform

env = Environment()

# Note: ajtcl include and library subdirectories are expected to be in the
# parent directory relative to the path of this file. If they're somewhere
# else, update LIBPATH and CPPPATH
env.Append(LIBPATH = '../lib')
env.Append(CPPPATH = [ '../include' ])

env.Prepend(LIBS = 'ajtcl')
env.Append(CPPDEFINES = [ 'AJ_MAIN' ])

if platform.system() == 'Windows':
    env.Append(CFLAGS = ['/Gy', '/O1', '/GF', '/MD'])
    env.Append(LINKFLAGS = ['/opt:ref', '/NODEFAULTLIB:libcmt.lib'])
    env.Append(LIBS = ['advapi32'])
elif platform.system() == 'Linux':
    env.Append(LIBS = ['rt', 'pthread'])
#end raw

#for $e in $executables
source_list = [
    #for $s in $e.sources
               '$s',
    #end for
              ]
env.Program('$e.name', source_list)

#end for
