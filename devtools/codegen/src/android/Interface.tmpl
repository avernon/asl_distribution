###############################################################################
## Copyright (c) 2014 AllSeen Alliance. All rights reserved.
##
## Contributed by Qualcomm Connected Experiences, Inc.,
## with authorization from the AllSeen Alliance, Inc.
## 
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
## 
##     http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## 
## Pursuant to Section 1 of the License, the work of authorship constituting
## a Work and any Contribution incorporated in the Work shall mean only that
## Contributor's code submissions authored by that Contributor.  Any rights
## granted under the License are conditioned upon acceptance of these
## clarifications.
###############################################################################
#import GenAndroid
#import CommonCheetah as cc
#from .. import common
#import os
/* Source: "$command_line.absolute_path_xml_input_file" */

package $interface.get_path();

#if $interface.dictionaries
import java.util.HashMap;

#end if
import org.alljoyn.bus.BusException;
import org.alljoyn.bus.annotation.BusInterface;
#if $interface.methods
import org.alljoyn.bus.annotation.BusMethod;
#end if
#if $interface.properties
import org.alljoyn.bus.annotation.BusProperty;
#end if
#if $interface.signals
import org.alljoyn.bus.annotation.BusSignal;
#end if
#if $interface.structures
import org.alljoyn.bus.annotation.Position;
#end if

/*
 * The BusInterface annotation is used to tell the code this interface is an AllJoyn
 * interface.
 *
 * The 'name' value is used to specify by which name this interface will be known.  If the name is
 * not given the fully qualified name of the Java interface is be used.  In most instances its best
 * to assign an interface name since it helps promote code reuse.
 */
@BusInterface(name = "$interface.interface_full_name")
public interface $interface.interface_name {
$cc.CommonCheetah.define_containers($interface, $command_line.runnable, 4)#slurp
    #if $interface.methods

    /*
     * The BusMethod annotation signifies this function should be used as part of the AllJoyn
     * interface. The runtime is smart enough to figure out what the input and output of the
     * method is based on the input/output arguments of the method.
     *
     * All methods that use the BusMethod annotation can throw a BusException and should indicate
     * this fact.
     */
        #for $m in $interface.methods
            #set $arg_info = $m.input_arg_info
            #set $annotation = $Interface.make_bus_annotation("BusMethod", $m)
    $annotation
    $GenAndroid.get_java_return_type($m) $common.make_camel_case($m.name, None)($arg_info.arg_declaration) throws BusException;
        #end for
    #end if
    #if $interface.properties

    /*
     * The BusProperty annotation signifies this property should be used as part of the
     * AllJoyn interface. The runtime is smart enough to figure out what the input and output of
     * the property is based on the input/output arguments of the property.
     *
     * All properties that use the BusProperty annotation can throw a BusException and should
     * indicate this fact.
     */
        #for $p in $interface.properties
            #set $arg_info = $p.input_arg_info
            #set $annotation = $Interface.make_bus_annotation("BusProperty", $p)
            #if $p.is_writeable()

    $annotation
    void set${p.name}($arg_info.arg_declaration) throws BusException;
            #end if
            #if $p.is_readable()
    $annotation
    $GenAndroid.get_java_return_type($p) get${p.name}() throws BusException;
            #end if
        #end for
    #end if
    #if $interface.signals

    /*
     * The BusSignal annotation signifies this signal should be used as part of the
     * AllJoyn interface.
     *
     * All signals that use the BusSignal annotation can throw a BusException and should
     * indicate this fact.
     */
        #for s in $interface.signals
            #set $arg_info = $s.output_arg_info
            #set $annotation = $Interface.make_bus_annotation("BusSignal", $s)
    $annotation
    void $common.make_camel_case($s.name, None)($arg_info.arg_declaration) throws BusException;
        #end for
    #end if
}
## Make the annotation string for 'BusSignal', 'BusProperty', or 'BusMethod'.
#@staticmethod
#def make_bus_annotation($annotation_name, $comp)
    #set $arg_sig = $common.get_arg_signature($comp, "in")
    #if len($arg_sig) > 0
        #set $signature = ', signature = "{0}"'.format($arg_sig)
    #else
        #set $signature = ""
    #end if
    #set $reply_signature = ""
    #set $reply_sig = $common.get_arg_signature($comp, "out")
    #if len($reply_sig) > 0
        #if $annotation_name == "BusProperty"
            #if $signature == ""
                #set $signature = ', signature = "{0}"'.format($reply_sig)
            #end if
        #else
            #set $reply_signature = ', replySignature = "{0}"'.format($reply_sig)
        #end if
    #end if
    #return '@{0} (name = "{1}"{2}{3})'.format($annotation_name, $comp.name, $signature, $reply_signature)
#end def
