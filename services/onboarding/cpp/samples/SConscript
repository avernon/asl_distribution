# Copyright (c) 2013 - 2014, AllSeen Alliance. All rights reserved.
#
#    Contributed by Qualcomm Connected Experiences, Inc.,
#    with authorization from the AllSeen Alliance, Inc.
#    
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#    
#        http://www.apache.org/licenses/LICENSE-2.0
#    
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#    
#    Pursuant to Section 1 of the License, the work of authorship constituting
#    a Work and any Contribution incorporated in the Work shall mean only that
#    Contributor's code submissions authored by that Contributor.  Any rights
#    granted under the License are conditioned upon acceptance of these
#    clarifications.

Import('onb_env')

local_env = onb_env.Clone()

vars = Variables()
vars.Add('JSON_LIB', 'The JSON library to link against.', 'json')
vars.Update(local_env)
Help(vars.GenerateHelpText(local_env))

if local_env['OS'] == 'openwrt':
   local_env.Append(CPPDEFINES = '_OPEN_WRT_')

local_env.Append(CPPPATH = ['.'])

local_env.Prepend(LIBS = [ 'alljoyn_onboarding',
                           'alljoyn_config',
                           'alljoyn_about',
                           'alljoyn_services_common',
                           local_env['JSON_LIB'] ])

if local_env['BR'] == 'on' and local_env.has_key('brobj') and local_env.has_key('ajrlib'):
    # Build apps with bundled daemon support
    local_env.Prepend(LIBS = [local_env['brobj'], local_env['ajrlib']])

local_env.Append(CPPPATH = local_env.Dir('$APP_COMMON_DIR/cpp/samples_common').srcnode())
local_env.VariantDir('AppCommon', '$APP_COMMON_DIR/cpp/samples_common/', duplicate = 0)
cobjs = local_env.SConscript('AppCommon/SConscript', {'env': local_env})

# Sample programs

sample_dirs = [
    'OnboardingClientSample'
    ]

exports = { 'env': local_env, 'cobjs': cobjs }

progs = [ local_env.SConscript('%s/SConscript' % sampleapp, exports = exports) for sampleapp in sample_dirs ]

Return('progs')

