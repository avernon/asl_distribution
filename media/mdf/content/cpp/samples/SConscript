# Contributed by Qualcomm Connected Experiences, Inc.,
# with authorization from the AllSeen Alliance, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# Pursuant to Section 1 of the License, the work of authorship constituting
# a Work and any Contribution incorporated in the Work shall mean only that
# Contributor's code submissions authored by that Contributor.  Any rights
# granted under the License are conditioned upon acceptance of these
# clarifications.

Import('contsenv')

samples_env = contsenv.Clone()

print '\n\n\n===================== contsenv.Dictionary ========================'
#dict = contsenv.Dictionary()
#keys = dict.keys()
#keys.sort()
#for key in keys:
#    print "construction variable = '%s', value = '%s'" % (key, dict[key])
#print '===================== contsenv.Dictionary ========================\n\n\n'


samples_env.Append(CPPPATH = samples_env.Dir('common').srcnode())
samples_env.Append(CPPPATH = samples_env.Dir('$APP_COMMON_DIR/cpp/samples_common').srcnode())
samples_env.Append(CPPDEFINES = 'USE_SAMPLE_LOGGER')
samples_env.Prepend(LIBS = ['alljoyn_media_content', 'alljoyn_about', 'alljoyn_services_common'])

if samples_env['BR'] == 'on' and samples_env.has_key('bdobj') and samples_env.has_key('bdlib'):
    # Build apps with bundled daemon support
    samples_env.Prepend(LIBS = [samples_env['bdobj'], samples_env['bdlib']])
    samples_env.Append(CPPDEFINES='QCC_USING_BD')

cobjs = samples_env.SConscript('common/SConscript', {'env': samples_env})

sample_dirs = [
    'SampleContentService',
    'SampleContentServiceClient'
    ]


exports = { 'env':samples_env, 'cobjs': cobjs }

progs = [ samples_env.SConscript('%s/SConscript' % sampleapp, exports = exports) for sampleapp in sample_dirs ]

Return('progs')
